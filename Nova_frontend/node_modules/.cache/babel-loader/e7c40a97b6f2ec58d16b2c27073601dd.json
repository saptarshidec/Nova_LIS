{"ast":null,"code":"var _jsxFileName = \"F:\\\\IIT Kharagpur\\\\Second Year\\\\SE Lab Group Project\\\\Nova LIS\\\\Nova_frontend\\\\src\\\\store\\\\scroll-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollContext = /*#__PURE__*/React.createContext({\n  isSecondaryNavOpen: false,\n  onToggleSecondaryNav: () => {}\n});\nexport const ScrollContextProvider = props => {\n  _s();\n\n  const [isSecondaryNavOpen, setIsSecondaryNavOpen] = useState(false);\n  const history = useHistory();\n\n  const toggleSecondaryNavHandler = () => {\n    setIsSecondaryNavOpen(prev => !prev);\n  };\n\n  history.listen((location, action) => {\n    window.scroll(0, 0);\n    setIsSecondaryNavOpen(false);\n  });\n  return /*#__PURE__*/_jsxDEV(ScrollContext.Provider, {\n    value: {\n      isSecondaryNavOpen,\n      onToggleSecondaryNav: toggleSecondaryNavHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ScrollContextProvider, \"O840ZfaH0xuZo4J1YwQTBAVZJPg=\", false, function () {\n  return [useHistory];\n});\n\n_c = ScrollContextProvider;\nexport default ScrollContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollContextProvider\");","map":{"version":3,"sources":["F:/IIT Kharagpur/Second Year/SE Lab Group Project/Nova LIS/Nova_frontend/src/store/scroll-context.js"],"names":["React","useState","useRef","useHistory","ScrollContext","createContext","isSecondaryNavOpen","onToggleSecondaryNav","ScrollContextProvider","props","setIsSecondaryNavOpen","history","toggleSecondaryNavHandler","prev","listen","location","action","window","scroll","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,aAAa,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AACtCC,EAAAA,kBAAkB,EAAE,KADkB;AAEtCC,EAAAA,oBAAoB,EAAE,MAAM,CAAE;AAFQ,CAApB,CAAtB;AAKA,OAAO,MAAMC,qBAAqB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACH,kBAAD,EAAqBI,qBAArB,IAA8CT,QAAQ,CAAC,KAAD,CAA5D;AAEA,QAAMU,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,yBAAyB,GAAG,MAAM;AACpCF,IAAAA,qBAAqB,CAACG,IAAI,IAAI,CAACA,IAAV,CAArB;AACH,GAFD;;AAIAF,EAAAA,OAAO,CAACG,MAAR,CAAe,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACjCC,IAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACAR,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACH,GAHD;AAKA,sBACI,QAAC,aAAD,CAAe,QAAf;AACI,IAAA,KAAK,EAAE;AACHJ,MAAAA,kBADG;AAEHC,MAAAA,oBAAoB,EAAEK;AAFnB,KADX;AAAA,cAMKH,KAAK,CAACU;AANX;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAxBM;;GAAMX,qB;UAGOL,U;;;KAHPK,qB;AA0Bb,eAAeJ,aAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ScrollContext = React.createContext({\n    isSecondaryNavOpen: false,\n    onToggleSecondaryNav: () => {}\n});\n\nexport const ScrollContextProvider = (props) => {\n    const [isSecondaryNavOpen, setIsSecondaryNavOpen] = useState(false);\n\n    const history = useHistory();\n\n    const toggleSecondaryNavHandler = () => {\n        setIsSecondaryNavOpen(prev => !prev);\n    }\n\n    history.listen((location, action) => {\n        window.scroll(0, 0);\n        setIsSecondaryNavOpen(false);\n    });\n\n    return (\n        <ScrollContext.Provider\n            value={{\n                isSecondaryNavOpen,\n                onToggleSecondaryNav: toggleSecondaryNavHandler\n            }}\n        >\n            {props.children}\n        </ScrollContext.Provider>\n    );\n};\n\nexport default ScrollContext;"]},"metadata":{},"sourceType":"module"}