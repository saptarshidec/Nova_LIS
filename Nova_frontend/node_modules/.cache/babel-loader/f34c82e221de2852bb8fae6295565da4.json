{"ast":null,"code":"var _jsxFileName = \"F:\\\\IIT Kharagpur\\\\Second Year\\\\SE Lab Group Project\\\\Nova LIS\\\\Nova_frontend\\\\src\\\\store\\\\user-context.js\",\n    _s = $RefreshSig$();\n\nimport { faTruckLoading } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: null,\n  user: null,\n  inFocus: null,\n  books: null,\n  onLogin: () => {},\n  onLogout: () => {},\n  onIssuedFocus: () => {},\n  onReturnedFocus: () => {},\n  onReservedFocus: () => {},\n  onPersonalFocus: () => {},\n  onManageFocus: () => {},\n  onBookQuery: () => {}\n});\nexport const UserContextProvider = props => {\n  _s();\n\n  const history = useHistory();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [inFocus, setInFocus] = useState(\"Issued Books\");\n  const [books, setBooks] = useState({\n    isLoaded: false,\n    issued: [],\n    returned: [],\n    reserved: []\n  });\n\n  const onLogin = data => {\n    setIsLoggedIn(true);\n    setUser(data);\n    history.push(\"/profile/\" + data.userName);\n  };\n\n  const onLogout = () => {\n    setUser(null);\n    setIsLoggedIn(false);\n    history.push(\"/home\");\n  };\n\n  const onIssuedFocus = () => {\n    setInFocus(\"Issued Books\");\n  };\n\n  const onReturnedFocus = () => {\n    setInFocus(\"Returned Books\");\n  };\n\n  const onReservedFocus = () => {\n    console.log(\"Reserved Focus\");\n    setInFocus(\"Reserved Books\");\n  };\n\n  const onPersonalFocus = () => {\n    setInFocus(\"Personal Information\");\n  };\n\n  const onManageFocus = () => {\n    setInFocus(\"Manage Library\");\n  };\n\n  const onBookQuery = async section => {\n    setBooks(prevBooks => {\n      return { ...prevBooks,\n        isLoaded: false\n      };\n    });\n    window.scroll(0, 0);\n    await fetch(\"http://localhost:5000/profile/\" + user.userName, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      const issuedBooks = [];\n      const returnedBooks = [];\n      const reservedBooks = [];\n\n      for (let sa of data.booksissued) {\n        if (!sa.returned) {\n          issuedBooks.unshift({\n            tId: sa.id,\n            bookId: sa.bookid,\n            bookNumber: sa.booknumber,\n            bookName: sa.title,\n            author: sa.author,\n            cover: sa.image_url,\n            type: \"Issued\",\n            issuedOn: sa.issuedate,\n            expectedReturn: sa.expectedreturn,\n            isPrinted: sa.isPrinted\n          });\n        } else {\n          returnedBooks.unshift({\n            bookId: sa.bookid,\n            bookNumber: sa.booknumber,\n            bookName: sa.title,\n            author: sa.author,\n            cover: sa.image_url,\n            type: \"Returned\",\n            issuedOn: sa.issuedate,\n            returnedOn: sa.returndate,\n            isDeleted: sa.isDeleted\n          });\n        }\n      }\n\n      for (let sa of data.booksreserved) {\n        reservedBooks.unshift({\n          bookId: sa.bookid,\n          bookNumber: sa.booknumber,\n          bookName: sa.title,\n          author: sa.author,\n          cover: sa.image_url,\n          type: \"Reserved\",\n          issuedOn: sa.issuedate,\n          returnedOn: sa.returndate,\n          isDeleted: sa.isDeleted,\n          isAvailable: sa.isAvailable\n        });\n      }\n\n      console.log(reservedBooks);\n      setBooks({\n        isLoaded: true,\n        issued: issuedBooks,\n        returned: returnedBooks,\n        reserved: reservedBooks\n      });\n      setInFocus(section);\n      history.push(\"/profile/\" + user.userName);\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      isLoggedIn,\n      user,\n      inFocus,\n      books,\n      onLogin,\n      onLogout,\n      onIssuedFocus,\n      onReservedFocus,\n      onReturnedFocus,\n      onPersonalFocus,\n      onManageFocus,\n      onBookQuery\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserContextProvider, \"5gZTdhG59+ryNcaSNw0m1eUG0So=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserContextProvider;\nexport default UserContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["F:/IIT Kharagpur/Second Year/SE Lab Group Project/Nova LIS/Nova_frontend/src/store/user-context.js"],"names":["faTruckLoading","React","useState","useHistory","UserContext","createContext","isLoggedIn","user","inFocus","books","onLogin","onLogout","onIssuedFocus","onReturnedFocus","onReservedFocus","onPersonalFocus","onManageFocus","onBookQuery","UserContextProvider","props","history","setIsLoggedIn","setUser","setInFocus","setBooks","isLoaded","issued","returned","reserved","data","push","userName","console","log","section","prevBooks","window","scroll","fetch","method","headers","then","response","json","issuedBooks","returnedBooks","reservedBooks","sa","booksissued","unshift","tId","id","bookId","bookid","bookNumber","booknumber","bookName","title","author","cover","image_url","type","issuedOn","issuedate","expectedReturn","expectedreturn","isPrinted","returnedOn","returndate","isDeleted","booksreserved","isAvailable","catch","error","children"],"mappings":";;;AAAA,SAASA,cAAT,QAA+B,mCAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;AACpCC,EAAAA,UAAU,EAAE,IADwB;AAEpCC,EAAAA,IAAI,EAAE,IAF8B;AAGpCC,EAAAA,OAAO,EAAE,IAH2B;AAIpCC,EAAAA,KAAK,EAAE,IAJ6B;AAKpCC,EAAAA,OAAO,EAAE,MAAM,CAAE,CALmB;AAMpCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CANkB;AAOpCC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAPa;AAQpCC,EAAAA,eAAe,EAAE,MAAM,CAAE,CARW;AASpCC,EAAAA,eAAe,EAAE,MAAM,CAAE,CATW;AAUpCC,EAAAA,eAAe,EAAE,MAAM,CAAE,CAVW;AAWpCC,EAAAA,aAAa,EAAE,MAAM,CAAE,CAXa;AAYpCC,EAAAA,WAAW,EAAE,MAAM,CAAE;AAZe,CAApB,CAApB;AAeA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,OAAO,GAAGjB,UAAU,EAA1B;AACA,QAAM,CAACG,UAAD,EAAae,aAAb,IAA8BnB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACK,IAAD,EAAOe,OAAP,IAAkBpB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACM,OAAD,EAAUe,UAAV,IAAwBrB,QAAQ,CAAC,cAAD,CAAtC;AACA,QAAM,CAACO,KAAD,EAAQe,QAAR,IAAoBtB,QAAQ,CAAC;AAAEuB,IAAAA,QAAQ,EAAE,KAAZ;AAAmBC,IAAAA,MAAM,EAAE,EAA3B;AAA+BC,IAAAA,QAAQ,EAAE,EAAzC;AAA6CC,IAAAA,QAAQ,EAAE;AAAvD,GAAD,CAAlC;;AAEA,QAAMlB,OAAO,GAAImB,IAAD,IAAU;AACtBR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,IAAAA,OAAO,CAACO,IAAD,CAAP;AACAT,IAAAA,OAAO,CAACU,IAAR,CAAa,cAAcD,IAAI,CAACE,QAAhC;AACH,GAJD;;AAMA,QAAMpB,QAAQ,GAAG,MAAM;AACnBW,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAD,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAD,IAAAA,OAAO,CAACU,IAAR,CAAa,OAAb;AACH,GAJD;;AAMA,QAAMlB,aAAa,GAAG,MAAM;AACxBW,IAAAA,UAAU,CAAC,cAAD,CAAV;AACH,GAFD;;AAIA,QAAMV,eAAe,GAAG,MAAM;AAC1BU,IAAAA,UAAU,CAAC,gBAAD,CAAV;AACH,GAFD;;AAIA,QAAMT,eAAe,GAAG,MAAM;AAC1BkB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAV,IAAAA,UAAU,CAAC,gBAAD,CAAV;AACH,GAHD;;AAKA,QAAMR,eAAe,GAAG,MAAM;AAC1BQ,IAAAA,UAAU,CAAC,sBAAD,CAAV;AACH,GAFD;;AAIA,QAAMP,aAAa,GAAG,MAAM;AACxBO,IAAAA,UAAU,CAAC,gBAAD,CAAV;AACH,GAFD;;AAIA,QAAMN,WAAW,GAAG,MAAOiB,OAAP,IAAmB;AACnCV,IAAAA,QAAQ,CAAEW,SAAD,IAAe;AACpB,aAAO,EAAE,GAAGA,SAAL;AAAgBV,QAAAA,QAAQ,EAAE;AAA1B,OAAP;AACH,KAFO,CAAR;AAIAW,IAAAA,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;AACA,UAAMC,KAAK,CAAC,mCAAmC/B,IAAI,CAACwB,QAAzC,EAAmD;AAC1DQ,MAAAA,MAAM,EAAE,KADkD;AAE1DC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAFiD,KAAnD,CAAL,CAMDC,IANC,CAMKC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANlB,EAODF,IAPC,CAOKZ,IAAD,IAAU;AACZ,YAAMe,WAAW,GAAG,EAApB;AACA,YAAMC,aAAa,GAAG,EAAtB;AACA,YAAMC,aAAa,GAAG,EAAtB;;AACA,WAAK,IAAIC,EAAT,IAAelB,IAAI,CAACmB,WAApB,EAAiC;AAC7B,YAAI,CAACD,EAAE,CAACpB,QAAR,EAAkB;AACdiB,UAAAA,WAAW,CAACK,OAAZ,CAAoB;AAChBC,YAAAA,GAAG,EAAEH,EAAE,CAACI,EADQ;AAEhBC,YAAAA,MAAM,EAAEL,EAAE,CAACM,MAFK;AAGhBC,YAAAA,UAAU,EAAEP,EAAE,CAACQ,UAHC;AAIhBC,YAAAA,QAAQ,EAAET,EAAE,CAACU,KAJG;AAKhBC,YAAAA,MAAM,EAAEX,EAAE,CAACW,MALK;AAMhBC,YAAAA,KAAK,EAAEZ,EAAE,CAACa,SANM;AAOhBC,YAAAA,IAAI,EAAE,QAPU;AAQhBC,YAAAA,QAAQ,EAAEf,EAAE,CAACgB,SARG;AAShBC,YAAAA,cAAc,EAAEjB,EAAE,CAACkB,cATH;AAUhBC,YAAAA,SAAS,EAAEnB,EAAE,CAACmB;AAVE,WAApB;AAYH,SAbD,MAaO;AACHrB,UAAAA,aAAa,CAACI,OAAd,CAAsB;AAClBG,YAAAA,MAAM,EAAEL,EAAE,CAACM,MADO;AAElBC,YAAAA,UAAU,EAAEP,EAAE,CAACQ,UAFG;AAGlBC,YAAAA,QAAQ,EAAET,EAAE,CAACU,KAHK;AAIlBC,YAAAA,MAAM,EAAEX,EAAE,CAACW,MAJO;AAKlBC,YAAAA,KAAK,EAAEZ,EAAE,CAACa,SALQ;AAMlBC,YAAAA,IAAI,EAAE,UANY;AAOlBC,YAAAA,QAAQ,EAAEf,EAAE,CAACgB,SAPK;AAQlBI,YAAAA,UAAU,EAAEpB,EAAE,CAACqB,UARG;AASlBC,YAAAA,SAAS,EAAEtB,EAAE,CAACsB;AATI,WAAtB;AAWH;AACJ;;AACD,WAAK,IAAItB,EAAT,IAAelB,IAAI,CAACyC,aAApB,EAAmC;AAC/BxB,QAAAA,aAAa,CAACG,OAAd,CAAsB;AAClBG,UAAAA,MAAM,EAAEL,EAAE,CAACM,MADO;AAElBC,UAAAA,UAAU,EAAEP,EAAE,CAACQ,UAFG;AAGlBC,UAAAA,QAAQ,EAAET,EAAE,CAACU,KAHK;AAIlBC,UAAAA,MAAM,EAAEX,EAAE,CAACW,MAJO;AAKlBC,UAAAA,KAAK,EAAEZ,EAAE,CAACa,SALQ;AAMlBC,UAAAA,IAAI,EAAE,UANY;AAOlBC,UAAAA,QAAQ,EAAEf,EAAE,CAACgB,SAPK;AAQlBI,UAAAA,UAAU,EAAEpB,EAAE,CAACqB,UARG;AASlBC,UAAAA,SAAS,EAAEtB,EAAE,CAACsB,SATI;AAUlBE,UAAAA,WAAW,EAAExB,EAAE,CAACwB;AAVE,SAAtB;AAYH;;AACDvC,MAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ;AACAtB,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,QAAQ,EAAE,IAAZ;AAAkBC,QAAAA,MAAM,EAAEkB,WAA1B;AAAuCjB,QAAAA,QAAQ,EAAEkB,aAAjD;AAAgEjB,QAAAA,QAAQ,EAAEkB;AAA1E,OAAD,CAAR;AACAvB,MAAAA,UAAU,CAACW,OAAD,CAAV;AACAd,MAAAA,OAAO,CAACU,IAAR,CAAa,cAAcvB,IAAI,CAACwB,QAAhC;AACH,KAzDC,EA0DDyC,KA1DC,CA0DMC,KAAD,IAAWzC,OAAO,CAACC,GAAR,CAAYwC,KAAZ,CA1DhB,CAAN;AA2DH,GAjED;;AAmEA,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHnE,MAAAA,UADG;AAEHC,MAAAA,IAFG;AAGHC,MAAAA,OAHG;AAIHC,MAAAA,KAJG;AAKHC,MAAAA,OALG;AAMHC,MAAAA,QANG;AAOHC,MAAAA,aAPG;AAQHE,MAAAA,eARG;AASHD,MAAAA,eATG;AAUHE,MAAAA,eAVG;AAWHC,MAAAA,aAXG;AAYHC,MAAAA;AAZG,KADX;AAAA,cAgBKE,KAAK,CAACuD;AAhBX;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CA/HM;;GAAMxD,mB;UACOf,U;;;KADPe,mB;AAiIb,eAAed,WAAf","sourcesContent":["import { faTruckLoading } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst UserContext = React.createContext({\n    isLoggedIn: null,\n    user: null,\n    inFocus: null,\n    books: null,\n    onLogin: () => {},\n    onLogout: () => {},\n    onIssuedFocus: () => {},\n    onReturnedFocus: () => {},\n    onReservedFocus: () => {},\n    onPersonalFocus: () => {},\n    onManageFocus: () => {},\n    onBookQuery: () => {},\n});\n\nexport const UserContextProvider = (props) => {\n    const history = useHistory();\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [user, setUser] = useState(null);\n    const [inFocus, setInFocus] = useState(\"Issued Books\");\n    const [books, setBooks] = useState({ isLoaded: false, issued: [], returned: [], reserved: [] });\n\n    const onLogin = (data) => {\n        setIsLoggedIn(true);\n        setUser(data);\n        history.push(\"/profile/\" + data.userName);\n    };\n\n    const onLogout = () => {\n        setUser(null);\n        setIsLoggedIn(false);\n        history.push(\"/home\");\n    };\n\n    const onIssuedFocus = () => {\n        setInFocus(\"Issued Books\");\n    };\n\n    const onReturnedFocus = () => {\n        setInFocus(\"Returned Books\");\n    };\n\n    const onReservedFocus = () => {\n        console.log(\"Reserved Focus\");\n        setInFocus(\"Reserved Books\");\n    };\n\n    const onPersonalFocus = () => {\n        setInFocus(\"Personal Information\");\n    };\n\n    const onManageFocus = () => {\n        setInFocus(\"Manage Library\");\n    };\n\n    const onBookQuery = async (section) => {\n        setBooks((prevBooks) => {\n            return { ...prevBooks, isLoaded: false };\n        });\n\n        window.scroll(0, 0);\n        await fetch(\"http://localhost:5000/profile/\" + user.userName, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                const issuedBooks = [];\n                const returnedBooks = [];\n                const reservedBooks = [];\n                for (let sa of data.booksissued) {\n                    if (!sa.returned) {\n                        issuedBooks.unshift({\n                            tId: sa.id,\n                            bookId: sa.bookid,\n                            bookNumber: sa.booknumber,\n                            bookName: sa.title,\n                            author: sa.author,\n                            cover: sa.image_url,\n                            type: \"Issued\",\n                            issuedOn: sa.issuedate,\n                            expectedReturn: sa.expectedreturn,\n                            isPrinted: sa.isPrinted,\n                        });\n                    } else {\n                        returnedBooks.unshift({\n                            bookId: sa.bookid,\n                            bookNumber: sa.booknumber,\n                            bookName: sa.title,\n                            author: sa.author,\n                            cover: sa.image_url,\n                            type: \"Returned\",\n                            issuedOn: sa.issuedate,\n                            returnedOn: sa.returndate,\n                            isDeleted: sa.isDeleted,\n                        });\n                    }\n                }\n                for (let sa of data.booksreserved) {\n                    reservedBooks.unshift({\n                        bookId: sa.bookid,\n                        bookNumber: sa.booknumber,\n                        bookName: sa.title,\n                        author: sa.author,\n                        cover: sa.image_url,\n                        type: \"Reserved\",\n                        issuedOn: sa.issuedate,\n                        returnedOn: sa.returndate,\n                        isDeleted: sa.isDeleted,\n                        isAvailable: sa.isAvailable\n                    });\n                }\n                console.log(reservedBooks);\n                setBooks({ isLoaded: true, issued: issuedBooks, returned: returnedBooks, reserved: reservedBooks });\n                setInFocus(section);\n                history.push(\"/profile/\" + user.userName);\n            })\n            .catch((error) => console.log(error));\n    };\n\n    return (\n        <UserContext.Provider\n            value={{\n                isLoggedIn,\n                user,\n                inFocus,\n                books,\n                onLogin,\n                onLogout,\n                onIssuedFocus,\n                onReservedFocus,\n                onReturnedFocus,\n                onPersonalFocus,\n                onManageFocus,\n                onBookQuery,\n            }}\n        >\n            {props.children}\n        </UserContext.Provider>\n    );\n};\n\nexport default UserContext;\n"]},"metadata":{},"sourceType":"module"}